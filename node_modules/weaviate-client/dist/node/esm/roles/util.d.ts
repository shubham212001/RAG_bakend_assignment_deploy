import { Permission as WeaviatePermission, Role as WeaviateRole } from '../openapi/types.js';
import {
  BackupsPermission,
  ClusterPermission,
  CollectionsPermission,
  DataPermission,
  NodesPermission,
  Permission,
  PermissionsInput,
  Role,
  RolesPermission,
  User,
} from './types.js';
export declare class PermissionGuards {
  static isBackups: (permission: Permission) => permission is BackupsPermission;
  static isCluster: (permission: Permission) => permission is ClusterPermission;
  static isCollections: (permission: Permission) => permission is CollectionsPermission;
  static isData: (permission: Permission) => permission is DataPermission;
  static isNodes: (permission: Permission) => permission is NodesPermission;
  static isRoles: (permission: Permission) => permission is RolesPermission;
  static isPermission: (permissions: PermissionsInput) => permissions is Permission;
  static isPermissionArray: (permissions: PermissionsInput) => permissions is Permission[];
  static isPermissionMatrix: (permissions: PermissionsInput) => permissions is Permission[][];
  static isPermissionTuple: (permissions: PermissionsInput) => permissions is (Permission | Permission[])[];
}
export declare class Map {
  static flattenPermissions: (permissions: PermissionsInput) => Permission[];
  static permissionToWeaviate: (permission: Permission) => WeaviatePermission;
  static roleFromWeaviate: (role: WeaviateRole) => Role;
  static roles: (roles: WeaviateRole[]) => Record<string, Role>;
  static users: (users: string[]) => Record<string, User>;
}
